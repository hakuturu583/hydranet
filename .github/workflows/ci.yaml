name: CI
on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *
  release:
    types: [published]

jobs:
  ci:
    name: ci
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
        poetry-version: ["1.2.1"]
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: install
        run: poetry install
      - name: test
        run: poetry run pytest
      - name: build
        run: poetry build
      - uses: actions/upload-artifact@v3
        with:
          name: onnx_files
          path: "*.onnx"
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: "dist/*"
  tensorrt:
    name: tensorrt
    needs: ci
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: package
          path: .github/workflows/docker/tensorrt
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v3
        with:
          tags: ghcr.io/${{ github.repository_owner }}/hydranet_tensorrt:latest
          no-cache: false
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/hydranet_tensorrt:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/hydranet_tensorrt:buildcache,mode=max
          push: ${{ github.event_name != 'pull_request'}}
          context: ./.github/workflows/docker/tensorrt
          file: ./.github/workflows/docker/tensorrt/Dockerfile
  generate_document:
    name: generate documentation
    needs: ci
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: onnx_files
    - uses: actions/setup-python@v1
      with:
        python-version: "3.10.8"
    - name: Install mkdocs
      run: >
        pip3 install 
        mkdocs mkdocstrings mkdocs-material 
        pymdown-extensions fontawesome_markdown 
        markdown python-markdown-math plantuml-markdown 
        mkdocs-codeinclude-plugin mkdocs-git-revision-date-localized-plugin plantuml
    - name: Copy to models directory
      run: |
        mv regnet.* docs/models/
        mv bifpn.* docs/models/
    - name: Build Document
      run: mkdocs build
    - uses: lycheeverse/lychee-action@v1.5.0
      id: lychee
      with:
        fail: true
        args: "--verbose --no-progress './**/*.md' --timeout 1000 --max-concurrency 32 -T 1 --retry-wait-time 10"
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - uses: actions/upload-artifact@v2
      with:
        name: site
        path: site
        retention-days: 1
    - name: Publish Report
      if: ${{ github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'}}
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_dir: site
        github_token: ${{ secrets.GITHUB_TOKEN }}